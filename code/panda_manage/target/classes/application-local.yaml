server:
  port: 52052

--- #################### 数据库相关配置 ####################

spring:
  # 数据源配置项 TODO 多数据源；TODO 监控配置
  datasource:
    name: panda_his
    url: jdbc:mysql://localhost:3306/${spring.datasource.name}?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 123456
    druid:
      web-stat-filter:
        enabled: true
      stat-view-servlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username:
        login-password:
      filter:
        stat:
          enabled: true
          # 慢 SQL 记录
          log-slow-sql: true
          slow-sql-millis: 100
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  # Redis 配置。Redisson 默认的配置足够使用，一般不需要进行调优
  redis:
    host: 127.0.0.1 # 地址
    port: 6379 # 端口
    database: 7 # 数据库索引



--- #################### 监控相关配置 ####################

# Actuator 监控端点的配置项
management:
  endpoints:
    web:
      base-path: /actuator # Actuator 提供的 API 接口的根目录。默认为 /actuator
      exposure:
        include: '*' # 需要开放的端点。默认值只打开 health 和 info 两个端点。通过设置 * ，可以开放所有端点。

# Spring Boot Admin 配置项
spring:
  boot:
    admin:
      # Spring Boot Admin Client 客户端的相关配置
      client:
        url: http://127.0.0.1:${server.port}/${spring.boot.admin.context-path} # 设置 Spring Boot Admin Server 地址
        instance:
          prefer-ip: true # 注册实例时，优先使用 IP
      # Spring Boot Admin Server 服务端的相关配置
      context-path: /admin # 配置 Spring

# 日志文件配置
logging:
  file:
    path: ${user.home}/logs/ # 日志文件的路径

--- #################### 教研相关配置 ####################

# 教研配置项，设置当前项目所有自定义的配置
system:
  info:
    version: 1.0.0
    base-package: com.pandahis.dashboard
  web:
    api-prefix: /api
    controller-package: ${system.info.base-package}
  security:
    token-header: Authorization
    token-secret: abcdefghijklmnopqrstuvwxyz
    token-timeout: 10d
    session-timeout: 30m
    mock-enable: true
    mock-secret: test
  swagger:
    title: 管理后台
    description: 提供管理员管理的所有功能
    version: ${system.info.version}
    base-package: ${system.info.base-package}.modules
  captcha:
    timeout: 10m
    width: 160
    height: 60
  file:
    base-path: http://127.0.0.1:${server.port}${system.web.api-prefix}/infra/file/get/
  codegen:
    base-package: ${system.info.base-package}
    db-schemas: ${spring.datasource.name}
  xss:
    enable: false
    exclude-urls: # 如下两个 url，仅仅是为了演示，去掉配置也没关系
      - ${spring.boot.admin.context-path}/** # 不处理 Spring Boot Admin 的请求
      - ${management.endpoints.web.base-path}/** # 不处理 Actuator 的请求
